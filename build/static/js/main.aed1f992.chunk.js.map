{"version":3,"sources":["styles/styles.js","components/Header.js","components/Welcome.js","components/FormWrapper.js","components/Job.js","components/Priority.js","data/form-data.js","components/Stats.js","helpers/teleport.js","components/Graph.js","components/Report.js","components/Map.js","App.js","index.js"],"names":["Breakpoints","BreakPoints","smallOnly","smallUp","betweenSmallAndLarge","betweenSmallAndMedium","medDown","medUp","largeDown","largeUp","xlargeDown","xlargeUp","xxlargeUp","xxlargeDown","TextButton","styled","button","attrs","type","TabButton","ButtonLink","Link","DirectionButton","DropDownList","select","HeaderDiv","header","MainSiteLink","a","Header","href","Intro","div","Welcome","to","FormWrapperDiv","Form","form","FormWrapper","children","UserChoices","userChoices","setUserChoices","data","value","job","onChange","event","localStorage","setItem","target","map","index","id","title","priority","formData","reports","scores","jobs","CheckBoxContainer","CheckBoxLabel","label","RemainingChoices","p","ToMapButton","Stats","navigate","useNavigate","useState","choiceLengthWarning","setChoiceLengthWarning","handleSelectChange","stats","length","currentTarget","checked","push","String","parentElement","classList","add","splice","indexOf","remove","className","includes","htmlFor","name","onClick","mainCities","fetch","then","response","json","_embedded","forEach","urbanArea","cityCoordinates","location","latlon","urabAreaUrl","_links","lat","latitude","lng","longitude","urbanAreaUrl","GraphContainer","Canvas","canvas","GraphTitle","h4","Graph","cityData","selection","chartContainer","useRef","graphName","setGraphName","chartInstance","setChartInstance","newGraphConfig","labels","dataset","options","salaries","borderWidth","borderRadius","backgroundColor","borderColor","responsive","scales","y","grid","color","display","text","font","size","x","plugins","legend","stat","city_name","min","max","datasets","useEffect","config","Chart","current","getContext","update","ref","ReportContainer","ReportTitle","ReportLine","getValueFromData","object","console","log","parseInt","toFixed","Report","reportData","setReportData","MapWrapper","MapLoadingMessage","CityLoadingMessage","MapArea","DataDisplay","Data","DataNav","nav","Tab","CityName","h3","ChangeSelection","Map","setCityData","setSelection","mapLoading","setMapLoading","cityLoading","setCityLoading","loader","Loader","apiKey","version","handleClick","marker","cities","panTo","position","city","urls","dataForUser","Promise","all","url","values","salariesJsonData","reportsJsonData","statsJsonData","find","categories","load","google","maps","document","getElementById","center","zoom","minZoom","maxZoom","disableDefaultUI","gestureHandling","restriction","latLngBounds","north","south","east","west","getAllCities","Marker","optimized","addListener","setTimeout","App","getItem","split","Helmet","charSet","src","path","element","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.aed1f992.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Colours = {\r\n  primary: '',\r\n};\r\n\r\nconst Breakpoints = {\r\n  sm: '420px',\r\n  med: '768px',\r\n  lg: '1040px',\r\n  xl: '1280px',\r\n  xxl: '1440px',\r\n};\r\n\r\nexport const BreakPoints = {\r\n  smallOnly: `(max-width: ${Breakpoints.sm})`,\r\n  smallUp: `(min-width: ${Breakpoints.sm})`,\r\n  betweenSmallAndLarge: `(min-width: ${Breakpoints.sm}) and (max-width: ${Breakpoints.lg})`,\r\n  betweenSmallAndMedium: `(min-width: ${Breakpoints.sm}) and (max-width: ${Breakpoints.med})`,\r\n  medDown: `(max-width: ${Breakpoints.med})`,\r\n  medUp: `(min-width: ${Breakpoints.med})`,\r\n  largeDown: `(max-width: ${Breakpoints.lg})`,\r\n  largeUp: `(min-width: ${Breakpoints.lg})`,\r\n  xlargeDown: `(max-width: ${Breakpoints.xl})`,\r\n  xlargeUp: `(min-width: ${Breakpoints.xl})`,\r\n  xxlargeUp: `(min-width: ${Breakpoints.xxl})`,\r\n  xxlargeDown: `(max-width: ${Breakpoints.xxl})`,\r\n};\r\n\r\nexport const TextButton = styled.button.attrs({type: 'button'})`  \r\n  width: max-content;\r\n  height: 50px;\r\n  border: 2px solid var(--secondary-color);\r\n  border-radius: 20px;\r\n  font-size: 1.5rem;\r\n  font-family: var(--primary-font);\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  margin-bottom: 30px;\r\n  padding: 0 2rem;\r\n  opacity: 0.5;\r\n  &.active{\r\n    opacity: 1;\r\n    :hover{\r\n      background: var(--secondary-color);\r\n      color: var(--white);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TabButton = styled.button.attrs({type: 'button'})`\r\n  font-size: 1.5rem;\r\n  font-family: var(--primary-font);\r\n  flex: 1 1;\r\n  //remove default button border type\r\n  border: none;\r\n  border-bottom: 2px solid var(--primary-color);\r\n  cursor: pointer;\r\n  :hover{\r\n    background: var(--off-white);\r\n  }\r\n  &.active{\r\n    border-bottom: none;\r\n    background: var(--off-white);\r\n  }\r\n  &:nth-child(2){\r\n    border-left: 2px solid var(--primary-color);\r\n    border-right: 2px solid var(--primary-color);\r\n  }\r\n\r\n`;\r\n\r\nexport const ButtonLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  min-width: 150px;\r\n  height: 50px;\r\n  width: max-content;\r\n  border: 2px solid var(--secondary-color);\r\n  border-radius: 20px;\r\n  font-size: 1.5rem;\r\n  font-family: var(--primary-font);\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  padding: 0 2rem;\r\n  :hover{\r\n    background: var(--secondary-color);\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\nexport const DirectionButton = styled(Link)`\r\n  text-decoration: none;\r\n  width: min-content;\r\n  font-size: 5rem;\r\n  cursor: pointer;\r\n  color: var(--primary-color);\r\n  transition: 0.2s;\r\n  &:hover{\r\n    color: var(--secondary-color);\r\n  }\r\n\r\n`;\r\n\r\nexport const DropDownList = styled.select`\r\n  width: max-content;\r\n  border-radius: 10px;\r\n  border: 2px solid var(--secondary-color);\r\n  background: #fff;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  padding: 10px;\r\n  option{\r\n    font-size: 1rem;\r\n  }\r\n  @media${BreakPoints.smallOnly}{\r\n    font-size: 1rem;\r\n  }\r\n`;","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport { BreakPoints, ButtonLink } from '../styles/styles';\r\n\r\nconst HeaderDiv = styled.header`\r\n  background: var(--secondary-color);\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media${BreakPoints.medDown}{\r\n    h1{\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\nconst MainSiteLink = styled.a`\r\n  color: var(--white);\r\n  text-decoration: none;\r\n  font-size: 1.3rem;\r\n  transition: 0.3s;\r\n  position: absolute;\r\n  left:0;\r\n  top:0;\r\n  margin: 10px;\r\n  padding: 5px 10px;\r\n  border-radius: 10px;\r\n  color: var(--white);\r\n  :hover{\r\n    background: var(--white);\r\n    color: var(--black);\r\n  }\r\n  @media${BreakPoints.medDown}{\r\n    position: relative;\r\n    margin: 10px;\r\n    font-size: 0.8rem;\r\n    background: var(--white);\r\n    color: black;\r\n    :hover{\r\n      color: var(--white);\r\n      background: var(--black);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Header(){\r\n  return (\r\n    <HeaderDiv>\r\n      <h1>Explore A City</h1>\r\n      <MainSiteLink href=\"https://willmidgette.com\">Back to main site</MainSiteLink>\r\n    </HeaderDiv>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport { BreakPoints, ButtonLink } from '../styles/styles';\r\n\r\nconst Intro = styled.div`\r\n  text-align: center;\r\n  padding: 0 10px;\r\n  p{\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport default function Welcome(){\r\n  return(\r\n    <Intro>\r\n      <h2>Welcome to the Explore Cities App</h2>\r\n      <p>I built this application as a tool to help people browse and compare statistics of cities around the world in an easy, interactive way.<br/><br/>Just select the statistics that matter most to you, and click on an area of the map to have a data summary populated!</p>\r\n      <ButtonLink to = {'./job'}>Start</ButtonLink>\r\n    </Intro>\r\n  )\r\n}\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport { BreakPoints, TextButton } from '../styles/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FormWrapperDiv = styled.div`\r\n  text-align: center;\r\n  padding: 0 10px;\r\n`;\r\nconst Form = styled.form`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin: 40px auto;\r\n  padding: 20px 0;\r\n  text-align: center !important;\r\n  height: min-content;\r\n  border-top: 1px solid var(--primary-color);\r\n  border-bottom: 1px solid var(--primary-color);\r\n  border-radius: \r\n  >div{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport function FormWrapper({children}){\r\n  return(\r\n    <FormWrapperDiv>\r\n      <h2>What would you like to see?</h2>\r\n      <p>The application will show salaries, general data reports, and up to 5 rankings compared to other countries/cities</p>\r\n      <Form>\r\n        {children}\r\n      </Form>\r\n      <p>Don't worry, you can edit these selections later.</p>\r\n    </FormWrapperDiv>\r\n  )\r\n}","import { DirectionButton, DropDownList } from '../styles/styles';\r\nimport { FormWrapper } from './FormWrapper';\r\n\r\nexport default function UserChoices({userChoices, setUserChoices, data}){\r\n  function handleSelectChange(event){\r\n    localStorage.setItem('job', event.target.value )\r\n    setUserChoices({...userChoices, 'job': event.target.value})\r\n  }\r\n  return (\r\n    <>\r\n      <FormWrapper>\r\n        <div>\r\n          <h3>I want to see salaries for:</h3>\r\n          <DropDownList value={userChoices.job} onChange={handleSelectChange}>\r\n            {data.map((data, index) => <option key={index} value={data.id}>{data.title}</option>)}\r\n          </DropDownList>\r\n          <div>\r\n            <DirectionButton to={\"../priority\"}>&#8594;</DirectionButton>\r\n          </div>\r\n        </div>\r\n      </FormWrapper>\r\n    </>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport { BreakPoints, DirectionButton, DropDownList } from '../styles/styles';\r\nimport { FormWrapper } from './FormWrapper';\r\n\r\nexport default function UserChoices({userChoices, setUserChoices, data}){\r\n  function handleSelectChange(event){\r\n    localStorage.setItem('priority', event.target.value )\r\n    setUserChoices({...userChoices, 'priority': event.target.value})\r\n  }\r\n  return (\r\n    <>\r\n      <FormWrapper>\r\n        <div>\r\n          <h3>My top priority is:</h3>\r\n          <DropDownList value={userChoices.priority} onChange={handleSelectChange}>\r\n            {data.map((data, index) => <option key={index} value={data.id}>{data.title}</option>)}\r\n          </DropDownList>\r\n          <div>\r\n            <DirectionButton to={\"../stats\"}>&#8594;</DirectionButton>\r\n          </div>\r\n        </div>\r\n      </FormWrapper>\r\n    </>\r\n  )\r\n}","/* Contains data for dropdown lists */\r\nconst formData = {\r\n    reports: [\r\n        {\r\n            \"id\": \"BUSINESS-FREEDOM\",\r\n            \"title\": \"Business Freedom\"\r\n        },\r\n        {\r\n            \"id\": \"CITY-SIZE\",\r\n            \"title\": \"City Size\"\r\n        },\r\n        {\r\n            \"id\": \"CLIMATE\",\r\n            \"title\": \"Climate\"\r\n        },\r\n        {\r\n            \"id\": \"COST-OF-LIVING\",\r\n            \"title\": \"Cost of Living\"\r\n        },\r\n        {\r\n            \"id\": \"CULTURE\",\r\n            \"title\": \"Leisure & Culture\"\r\n        },\r\n        {\r\n            \"id\": \"ECONOMY\",\r\n            \"title\": \"Economy\"\r\n        },\r\n        {\r\n            \"id\": \"EDUCATION\",\r\n            \"title\": \"Education\"\r\n        },\r\n        {\r\n            \"id\": \"HEALTHCARE\",\r\n            \"title\": \"Healthcare\"\r\n        },\r\n        {\r\n            \"id\": \"HOUSING\",\r\n            \"title\": \"Housing\"\r\n        },\r\n        {\r\n            \"id\": \"INTERNAL\",\r\n            \"title\": \"Internal application use\"\r\n        },\r\n        {\r\n            \"id\": \"JOB-MARKET\",\r\n            \"title\": \"Job Market\"\r\n        },\r\n        {\r\n            \"id\": \"LANGUAGE\",\r\n            \"title\": \"Language\"\r\n        },\r\n        {\r\n            \"id\": \"MINORITIES\",\r\n            \"title\": \"Tolerance\"\r\n        },\r\n        {\r\n            \"id\": \"NETWORK\",\r\n            \"title\": \"Internet Access\"\r\n        },\r\n        {\r\n            \"id\": \"OUTDOORS\",\r\n            \"title\": \"Outdoors\"\r\n        },\r\n        {\r\n            \"id\": \"POLLUTION\",\r\n            \"title\": \"Environmental Quality\"\r\n        },\r\n        {\r\n            \"id\": \"SAFETY\",\r\n            \"title\": \"Safety\"\r\n        },\r\n        {\r\n            \"id\": \"STARTUPS\",\r\n            \"title\": \"Startups\"\r\n        },\r\n        {\r\n            \"id\": \"TAXATION\",\r\n            \"title\": \"Taxation\"\r\n        },\r\n        {\r\n            \"id\": \"TRAFFIC\",\r\n            \"title\": \"Commute\"\r\n        },\r\n        {\r\n            \"id\": \"TRAVEL-CONNECTIVITY\",\r\n            \"title\": \"Travel Connectivity\"\r\n        },\r\n        {\r\n            \"id\": \"VENTURE-CAPITAL\",\r\n            \"title\": \"Venture Capital\"\r\n        }\r\n    ],\r\n    scores: [\r\n        \"Housing\",\r\n        \"Cost of Living\",\r\n        \"Startups\",\r\n        \"Venture Capital\",\r\n        \"Travel Connectivity\",\r\n        \"Commute\",\r\n        \"Business Freedom\",\r\n        \"Safety\",\r\n        \"Healthcare\",\r\n        \"Education\",\r\n        \"Environmental Quality\",\r\n        \"Economy\",\r\n        \"Taxation\",\r\n        \"Internet Access\",\r\n        \"Leisure & Culture\",\r\n        \"Tolerance\",\r\n        \"Outdoors\"\r\n    ],\r\n    jobs: [\r\n        {\r\n            \"id\": \"ACCOUNT-MANAGER\",\r\n            \"title\": \"Account Manager\"\r\n        },\r\n        {\r\n            \"id\": \"ACCOUNTANT\",\r\n            \"title\": \"Accountant\"\r\n        },\r\n        {\r\n            \"id\": \"ADMINISTRATIVE-ASSISTANT\",\r\n            \"title\": \"Administrative Assistant\"\r\n        },\r\n        {\r\n            \"id\": \"ARCHITECT\",\r\n            \"title\": \"Architect\"\r\n        },\r\n        {\r\n            \"id\": \"ATTORNEY\",\r\n            \"title\": \"Attorney\"\r\n        },\r\n        {\r\n            \"id\": \"BUSINESS-ANALYST\",\r\n            \"title\": \"Business Analyst\"\r\n        },\r\n        {\r\n            \"id\": \"BUSINESS-DEVELOPMENT\",\r\n            \"title\": \"Business Development\"\r\n        },\r\n        {\r\n            \"id\": \"C-LEVEL-EXECUTIVE\",\r\n            \"title\": \"C Level Executive\"\r\n        },\r\n        {\r\n            \"id\": \"CASHIER\",\r\n            \"title\": \"Cashier\"\r\n        },\r\n        {\r\n            \"id\": \"CHEF\",\r\n            \"title\": \"Chef\"\r\n        },\r\n        {\r\n            \"id\": \"CHEMICAL-ENGINEER\",\r\n            \"title\": \"Chemical Engineer\"\r\n        },\r\n        {\r\n            \"id\": \"CIVIL-ENGINEER\",\r\n            \"title\": \"Civil Engineer\"\r\n        },\r\n        {\r\n            \"id\": \"CONTENT-MARKETING\",\r\n            \"title\": \"Content Marketing\"\r\n        },\r\n        {\r\n            \"id\": \"COPYWRITER\",\r\n            \"title\": \"Copywriter\"\r\n        },\r\n        {\r\n            \"id\": \"CUSTOMER-SUPPORT\",\r\n            \"title\": \"Customer Support\"\r\n        },\r\n        {\r\n            \"id\": \"DATA-ANALYST\",\r\n            \"title\": \"Data Analyst\"\r\n        },\r\n        {\r\n            \"id\": \"DATA-SCIENTIST\",\r\n            \"title\": \"Data Scientist\"\r\n        },\r\n        {\r\n            \"id\": \"DENTIST\",\r\n            \"title\": \"Dentist\"\r\n        },\r\n        {\r\n            \"id\": \"ELECTRICAL-ENGINEER\",\r\n            \"title\": \"Electrical Engineer\"\r\n        },\r\n        {\r\n            \"id\": \"EXECUTIVE-ASSISTANT\",\r\n            \"title\": \"Executive Assistant\"\r\n        },\r\n        {\r\n            \"id\": \"FASHION-DESIGNER\",\r\n            \"title\": \"Fashion Designer\"\r\n        },\r\n        {\r\n            \"id\": \"FINANCE-MANAGER\",\r\n            \"title\": \"Finance Manager\"\r\n        },\r\n        {\r\n            \"id\": \"FINANCIAL-ANALYST\",\r\n            \"title\": \"Financial Analyst\"\r\n        },\r\n        {\r\n            \"id\": \"GRAPHIC-DESIGNER\",\r\n            \"title\": \"Graphic Designer\"\r\n        },\r\n        {\r\n            \"id\": \"HARDWARE-ENGINEER\",\r\n            \"title\": \"Hardware Engineer\"\r\n        },\r\n        {\r\n            \"id\": \"HUMAN-RESOURCES-MANAGER\",\r\n            \"title\": \"Human Resources Manager\"\r\n        },\r\n        {\r\n            \"id\": \"IT-MANAGER\",\r\n            \"title\": \"IT Manager\"\r\n        },\r\n        {\r\n            \"id\": \"INDUSTRIAL-DESIGNER\",\r\n            \"title\": \"Industrial Designer\"\r\n        },\r\n        {\r\n            \"id\": \"INTERIOR-DESIGNER\",\r\n            \"title\": \"Interior Designer\"\r\n        },\r\n        {\r\n            \"id\": \"LECTURER\",\r\n            \"title\": \"Lecturer\"\r\n        },\r\n        {\r\n            \"id\": \"MARKETING-MANAGER\",\r\n            \"title\": \"Marketing Manager\"\r\n        },\r\n        {\r\n            \"id\": \"MECHANICAL-ENGINEER\",\r\n            \"title\": \"Mechanical Engineer\"\r\n        },\r\n        {\r\n            \"id\": \"MOBILE-DEVELOPER\",\r\n            \"title\": \"Mobile Developer\"\r\n        },\r\n        {\r\n            \"id\": \"NURSE\",\r\n            \"title\": \"Nurse\"\r\n        },\r\n        {\r\n            \"id\": \"OFFICE-MANAGER\",\r\n            \"title\": \"Office Manager\"\r\n        },\r\n        {\r\n            \"id\": \"OPERATIONS-MANAGER\",\r\n            \"title\": \"Operations Manager\"\r\n        },\r\n        {\r\n            \"id\": \"PHARMACIST\",\r\n            \"title\": \"Pharmacist\"\r\n        },\r\n        {\r\n            \"id\": \"PHYSICIAN\",\r\n            \"title\": \"Physician\"\r\n        },\r\n        {\r\n            \"id\": \"POSTDOCTORAL-RESEARCHER\",\r\n            \"title\": \"Postdoctoral Researcher\"\r\n        },\r\n        {\r\n            \"id\": \"PRODUCT-MANAGER\",\r\n            \"title\": \"Product Manager\"\r\n        },\r\n        {\r\n            \"id\": \"PROJECT-MANAGER\",\r\n            \"title\": \"Project Manager\"\r\n        },\r\n        {\r\n            \"id\": \"QA-ENGINEER\",\r\n            \"title\": \"QA Engineer\"\r\n        },\r\n        {\r\n            \"id\": \"RECEPTIONIST\",\r\n            \"title\": \"Receptionist\"\r\n        },\r\n        {\r\n            \"id\": \"RESEARCH-SCIENTIST\",\r\n            \"title\": \"Research Scientist\"\r\n        },\r\n        {\r\n            \"id\": \"SALES-MANAGER\",\r\n            \"title\": \"Sales Manager\"\r\n        },\r\n        {\r\n            \"id\": \"SOFTWARE-ENGINEER\",\r\n            \"title\": \"Software Engineer\"\r\n        },\r\n        {\r\n            \"id\": \"SYSTEMS-ADMINISTRATOR\",\r\n            \"title\": \"Systems Administrator\"\r\n        },\r\n        {\r\n            \"id\": \"TEACHER\",\r\n            \"title\": \"Teacher\"\r\n        },\r\n        {\r\n            \"id\": \"UX-DESIGNER\",\r\n            \"title\": \"UX Designer\"\r\n        },\r\n        {\r\n            \"id\": \"WAITER\",\r\n            \"title\": \"Waiter\"\r\n        },\r\n        {\r\n            \"id\": \"WEB-DESIGNER\",\r\n            \"title\": \"Web Designer\"\r\n        },\r\n        {\r\n            \"id\": \"WEB-DEVELOPER\",\r\n            \"title\": \"Web Developer\"\r\n        }\r\n    ]\r\n}\r\nexport default formData","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport { BreakPoints, TextButton, DirectionButton } from '../styles/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport formData from '../data/form-data';\r\nimport { FormWrapper } from './FormWrapper';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst CheckBoxContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: auto;\r\n  width: 500px;\r\n  gap: 10px;\r\n  @media${BreakPoints.medDown}{\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`;\r\nconst CheckBoxLabel = styled.label`\r\n  input{\r\n    position: absolute;\r\n    opacity: 0;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: 0.3s;\r\n  width: max-content;\r\n  height: min-height;\r\n  border-radius: 10px;\r\n  border: 2px solid var(--secondary-color);\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  background: white;\r\n  &.checked{\r\n    background: orange;\r\n  }\r\n  @media${BreakPoints.medDown}{\r\n    width: 100%;\r\n  }\r\n`;\r\nconst RemainingChoices = styled.p`\r\n  span{\r\n    color: black;\r\n    &.warning{\r\n      color: var(--error-color);\r\n    }\r\n  }\r\n`;\r\nconst ToMapButton = styled(TextButton)`\r\n  align-self: center;\r\n`;\r\n\r\nexport default function Stats({userChoices, setUserChoices, data}){\r\n  const navigate = useNavigate();\r\n  const [choiceLengthWarning, setChoiceLengthWarning] = useState(null);\r\n  function handleSelectChange(event){\r\n    const stats = userChoices.stats;\r\n    //If the user is trying to add a 6th choice, return and setwarn\r\n    if(stats.length >=5 && event.currentTarget.checked){\r\n      setChoiceLengthWarning(true);\r\n      event.currentTarget.checked = false;\r\n      return;\r\n    }\r\n    setChoiceLengthWarning(false)\r\n    //add the choice value to the array if checked\r\n    if(event.currentTarget.checked){\r\n      stats.push(String(event.currentTarget.value));\r\n      event.currentTarget.parentElement.classList.add('checked')\r\n    } //else remove the value from the array\r\n    else{\r\n      stats.splice(stats.indexOf(event.currentTarget.value), 1);\r\n      event.currentTarget.parentElement.classList.remove('checked')\r\n    }\r\n    localStorage.setItem('stats', stats)\r\n    setUserChoices({...userChoices, stats: stats})\r\n  }\r\n  function navigateToMap(){\r\n    if(userChoices.stats.length){\r\n      navigate(\"../map\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <FormWrapper>\r\n        <h3>I want to see world rankings for:</h3>\r\n        <p>(Select up to five)</p>\r\n        <CheckBoxContainer>\r\n          {data.map((data, index) => \r\n            <CheckBoxLabel className={userChoices.stats.includes(data) && \"checked\"} key={index} htmlFor={data}>\r\n              <input checked={userChoices.stats.includes(data)} onChange={handleSelectChange} type=\"checkbox\" id={data} name ={data} key={index} value={data}/>\r\n              <div>\r\n                <span>{data}</span>\r\n              </div>\r\n            </CheckBoxLabel>\r\n          )}\r\n        </CheckBoxContainer>\r\n        <RemainingChoices>{choiceLengthWarning? <span className=\"warning\">You already have 5 choices</span> : <span>{`You have ${5 - userChoices.stats.length} choices remaining`}</span>}</RemainingChoices>\r\n        <ToMapButton onClick={navigateToMap} className = {userChoices.stats.length && \"active\"}>Continue to Map</ToMapButton>\r\n      </FormWrapper>\r\n    </>\r\n  )\r\n}\r\n","//Holds functions calling Teleport API\r\nexport async function getAllCities(){\r\n  const mainCities = [];\r\n    await fetch('https://api.teleport.org/api/urban_areas/?embed=ua%3Aitem%2Fua%3Aidentifying%2Dcity').then(\r\n        function(response){\r\n          return response.json();\r\n        }\r\n    ).then((data)=>{\r\n        const urbanAreas = data._embedded[\"ua:item\"];\r\n        //Add name and coordinates of each city to the mainCitites array\r\n        urbanAreas.forEach((urbanArea)=>{\r\n          const cityCoordinates = urbanArea._embedded['ua:identifying-city'].location.latlon\r\n          const urabAreaUrl = urbanArea._embedded['ua:identifying-city']._links[\"city:urban_area\"].href;\r\n          mainCities.push({\r\n            name: urbanArea.name,\r\n            lat: cityCoordinates.latitude,\r\n            lng: cityCoordinates.longitude,\r\n            urbanAreaUrl: urabAreaUrl\r\n          })\r\n        })\r\n      }\r\n    )\r\n    return mainCities;\r\n}","import styled from \"styled-components\"\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport Chart from \"chart.js/auto\";\r\nimport { BreakPoints } from '../styles/styles';\r\n\r\nconst GraphContainer = styled.div`\r\n`;\r\nconst Canvas = styled.canvas`\r\n  width: 400px;\r\n  @media${BreakPoints.smallOnly}{\r\n    width: 300px;\r\n    height: 400px;\r\n  }\r\n`;\r\nconst GraphTitle = styled.h4`\r\n  text-align: center;\r\n  font-size:1.3rem;\r\n`;\r\nexport function Graph({cityData, selection}){\r\n  const chartContainer = useRef(null)\r\n  const [graphName, setGraphName] = useState(null)\r\n  const [chartInstance, setChartInstance] = useState(null)\r\n  //sets configuration settings for the graph when the cityData or selection is updated\r\n  function newGraphConfig(){\r\n    let data;\r\n    let labels;\r\n    let dataset;\r\n    let options;\r\n    if(selection==='salaries'){\r\n      setGraphName(`${cityData.salaries.job.title} Salaries`)\r\n      data = cityData.salaries['salary_percentiles']\r\n      labels = ['low-end', 'medium', 'high-end']\r\n      dataset = {\r\n        borderWidth: 2,\r\n        borderRadius: 5,\r\n        backgroundColor: '#AADAFF',\r\n        borderColor: '#020077',\r\n        data: [data['percentile_25'], data['percentile_50'], data['percentile_75']],     \r\n      }  \r\n      options = {\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            grid: {\r\n              color: 'black',\r\n            },\r\n            title:{\r\n              display: true,\r\n              text: 'Annual Salary USD',\r\n              font: {\r\n                size: 14\r\n              }\r\n            },\r\n          },\r\n          x: {\r\n            grid: {\r\n              display: false,\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n            labels: {\r\n              font: {\r\n                size: 18,\r\n                color: 'red'\r\n              },\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if(selection===\"stats\"){\r\n      setGraphName('(Ranked 0 to 10)')\r\n      data = cityData.stats\r\n      labels = data.map((stat=>stat.name))\r\n      dataset = {\r\n        borderWidth: 2,\r\n        borderRadius: 5,\r\n        label: `${cityData.city_name}`,\r\n        backgroundColor: '#AADAFF',\r\n        borderColor: '#020077',\r\n        data: data.map((stat)=>stat['score_out_of_10'])   \r\n      }  \r\n      options = {\r\n        scales: {\r\n          y: {\r\n            grid: {\r\n              color: 'black',\r\n            },\r\n            title:{\r\n              display: true,\r\n              text: 'Rank out of 10',\r\n              font: {\r\n                size: 14\r\n              }\r\n            },\r\n            min:0,\r\n            max:10\r\n          },\r\n          x: {\r\n            color: 'black',\r\n            grid: {\r\n              display: false\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n            labels: {\r\n              font: {\r\n                size: 18\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const newDataConfig = {\r\n      type:'bar',\r\n      data: {\r\n        labels: labels,\r\n        datasets: [dataset]\r\n      },\r\n      options: options\r\n    }\r\n    return newDataConfig;\r\n  }\r\n  //Create new chart on component load\r\n  useEffect(()=>{\r\n    let config = {\r\n      type: 'bar',\r\n      data: {\r\n        labels: null,\r\n        datasets: [{\r\n          borderWidth: 2,\r\n          borderRadius: 5,\r\n          backgroundColor: '#AADAFF',\r\n          borderColor: '#020077',\r\n        }]  \r\n      },\r\n      options: {\r\n      }\r\n    };\r\n    //If CityData has already been selected add data to basic config\r\n    if(cityData){\r\n      config = newGraphConfig();\r\n    }\r\n    setChartInstance(new Chart(\r\n      chartContainer.current.getContext('2d'), \r\n      config\r\n    ));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [chartContainer])\r\n\r\n  //When selections and citydata change the graph data\r\n  useEffect(()=>{\r\n    //If chart exists, update it with new data\r\n    if(chartInstance){\r\n      if(!cityData){\r\n        return\r\n      }\r\n      const {data, options} = newGraphConfig();\r\n      chartInstance.data = data;\r\n      chartInstance.options = options; \r\n      chartInstance.update();\r\n      return\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cityData, selection])\r\n\r\n  return(\r\n    <GraphContainer>\r\n      <GraphTitle>{graphName}</GraphTitle>\r\n      <Canvas ref={chartContainer}></Canvas>\r\n    </GraphContainer>\r\n  )\r\n}","import styled from \"styled-components\"\r\nimport { useEffect, useRef, useState } from 'react'\r\n\r\nconst ReportContainer = styled.div`\r\n  margin: auto;\r\n  width: 100%;\r\n`;\r\nconst ReportTitle = styled.h4`\r\n  text-align: center;\r\n  font-size: 1.3rem;\r\n`;\r\nconst ReportLine = styled.div`\r\n  font-weight: bold;\r\n  color: black;\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  border-bottom: 2px solid var(--primary-color);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: end;\r\n  span:first-child{\r\n    max-width: 300px;\r\n  }\r\n  padding:10px;\r\n`;\r\n\r\nfunction getValueFromData(object){\r\n  console.log(object)\r\n  let value = object['float_value'] || object['int_value'] || object['string_value'] || object['currency_dollar_value'] || object['percent_value']; \r\n  const type = object.type;\r\n  console.log(value)\r\n  switch(type){\r\n    case 'percent':\r\n      value = `${parseInt(value*100).toFixed(2)}%`;\r\n      break;\r\n    case 'currency_dollar':\r\n      value = `$${value}`\r\n      break; \r\n    case 'float':\r\n      value = parseInt(value).toFixed(2);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return value\r\n}\r\n\r\nexport function Report({cityData}){\r\n  const [reportData, setReportData] = useState(null);\r\n  useEffect(()=>{\r\n    if(!cityData){\r\n      setReportData(null)\r\n      return\r\n    }\r\n    setReportData(cityData.reports)\r\n  },[cityData])\r\n  return(\r\n    <ReportContainer>\r\n      <ReportTitle>{reportData? reportData.label : 'no data'}</ReportTitle>\r\n      <div>\r\n        {reportData && reportData.data.map((object, index)=><ReportLine key={index}><span>{`${object.label}: `}</span><span>{getValueFromData(object)}</span></ReportLine>)}\r\n      </div>\r\n    </ReportContainer>\r\n  )\r\n}","import React, {useEffect, useState, useRef} from 'react';\r\nimport styled from 'styled-components'\r\nimport { BreakPoints, TextButton, DirectionButton, TabButton, ButtonLink } from '../styles/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loader } from \"@googlemaps/js-api-loader\"\r\nimport {getAllCities} from '../helpers/teleport'\r\nimport { Graph } from './Graph';\r\nimport { Report } from './Report';\r\n\r\nconst MapWrapper = styled.div`\r\n  width: 100%;\r\n  flex: 1 0;\r\n  position: relative;\r\n  height: 75vh;\r\n  min-height:500px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  @media${BreakPoints.largeDown}{\r\n    height: max-content;\r\n  }\r\n`;\r\nconst MapLoadingMessage = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  background: #ffffff90;\r\n  z-index: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 3rem;\r\n  @media${BreakPoints.smallOnly}{\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst CityLoadingMessage = styled(MapLoadingMessage)`\r\n  font-size: 20px;\r\n`;\r\nconst MapArea = styled.div`\r\n  background: var(--water-blue);\r\n  border: 2px solid var(--primary-color);\r\n  box-shadow: -2px 2px 2px var(--primary-color);\r\n  height: 100%;\r\n  @media${BreakPoints.largeDown}{\r\n    flex: 0 0 500px;\r\n  }\r\n  @media${BreakPoints.medDown}{\r\n    flex: 0 0 300px;\r\n  }\r\n\r\n`;\r\nconst DataDisplay = styled.div`\r\n  background: var(--off-white);\r\n  padding: 20px;\r\n  position: relative;\r\n  @media${BreakPoints.largeDown}{\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n  }\r\n`;\r\nconst Data = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  width: 400px;\r\n  border-bottom-left-radius: 50px;\r\n  overflow: hidden;\r\n  border: 2px solid var(--primary-color);\r\n  @media${BreakPoints.largeDown}{\r\n    position: relative;\r\n    width: 100%;\r\n    border-bottom-left-radius: 0;\r\n  }\r\n`;\r\nconst DataNav = styled.nav`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\nconst Tab = styled(TabButton)`\r\n  padding:0;\r\n  margin:0;\r\n`;\r\n\r\nconst CityName = styled.h3`\r\n  text-align: center;\r\n  margin: 0 30px;\r\n  font-size: 2rem;\r\n  @media${BreakPoints.smallOnly}{\r\n    font-size: 1.5rem\r\n  }\r\n`;\r\nconst ChangeSelection = styled(ButtonLink)`\r\n  display: block;\r\n  margin-top: 10px;\r\n  height: min-content;\r\n  width: max-content;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  margin: 20px auto 0 auto;\r\n`;\r\nexport default function Map({userChoices, setUserChoices}){\r\n  //TODO: if selections have not been made redirect the user to the home page\r\n  const [cityData, setCityData] = useState(null)\r\n  const [selection, setSelection] = useState('salaries')\r\n  const [mapLoading, setMapLoading] = useState(false)\r\n  const [cityLoading, setCityLoading] = useState(false)\r\n  const loader = new Loader({\r\n    apiKey: \"AIzaSyAOEAFF4EHYHpp9kiCkK-mnVD7DzRWT9Mg\",\r\n    version: \"weekly\",\r\n  });\r\n  useEffect(()=>{\r\n    setMapLoading(true);\r\n    loader.load().then((google) => {\r\n      //Load the google map\r\n      const zoom = 5;\r\n      const map = new google.maps.Map(document.getElementById(\"map\"), \r\n      {\r\n        center: { lat: 48.13743, lng: 11.57549 },\r\n        zoom: 4,\r\n        minZoom: zoom - 3,\r\n        maxZoom: zoom + 3,\r\n        disableDefaultUI: true,\r\n        gestureHandling: \"greedy\",\r\n        restriction: {\r\n          latLngBounds: {\r\n            north: 80,\r\n            south: -70,\r\n            east: 185,\r\n            west: 190,\r\n          },\r\n        },\r\n      })\r\n      //Populate map with city locations\r\n      getAllCities().then((cities)=>{\r\n        cities.forEach(async(city, index)=>{\r\n          const marker = await new google.maps.Marker({\r\n            position: {lat : city.lat, lng : city.lng},\r\n            map: map,\r\n            title: city.name,\r\n            optimized : true,\r\n            index: index\r\n          });\r\n          marker.addListener(\"click\", function(){\r\n            handleClick(marker, map, cities);\r\n        });\r\n        })\r\n        //A bit eye-jerky for the user removing the loading div - make less abrupt\r\n        setTimeout(()=>setMapLoading(false), 1000)\r\n      })\r\n    })\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  async function handleClick(marker, map, cities){\r\n    //Then pan to the new location\r\n    map.panTo({lat:marker.position.lat(), lng:marker.position.lng()});\r\n    //While map is panning, set the new cityData based on the marker clicked\r\n    const city = cities[marker.index]\r\n    const urbanAreaUrl =city.urbanAreaUrl\r\n    const urls = [\r\n      urbanAreaUrl + 'salaries',\r\n      urbanAreaUrl +'details',\r\n      urbanAreaUrl + 'scores'\r\n    ]\r\n    let dataForUser =  {\r\n      city_name: city.name,\r\n      salaries: [],\r\n      reports: [],\r\n      stats: []\r\n    }\r\n    //TODO: Create a cache that holds already clicked cities to reduce requests\r\n    setCityLoading(true)\r\n    Promise.all(urls.map((url)=>fetch(url))).then(async(values)=>{\r\n      //TODO: Could probably add a forEach later to clean this up\r\n      const salariesJsonData = await values[0].json();\r\n      const reportsJsonData = await values[1].json();\r\n      const statsJsonData = await values[2].json();\r\n      dataForUser.salaries = salariesJsonData.salaries.find((object)=>object.job.id===userChoices.job)\r\n      dataForUser.reports = reportsJsonData.categories.find((object)=>object.id===userChoices.priority)\r\n      userChoices.stats.forEach((stat)=>dataForUser.stats.push(statsJsonData.categories.find((object)=>object.name===stat)))\r\n      setCityData(dataForUser)\r\n      setCityLoading(false)\r\n    })\r\n  }\r\n  return (\r\n    <MapWrapper>\r\n      {mapLoading && <MapLoadingMessage><span>Loading Map...</span></MapLoadingMessage>}\r\n      <MapArea id='map'></MapArea>\r\n      <Data>\r\n        {cityLoading && <CityLoadingMessage>Loading city data...</CityLoadingMessage>}\r\n        <DataNav>\r\n          <Tab className={selection==='salaries'? \"active\" : \"\"} onClick={()=>setSelection('salaries')}>Salaries</Tab>\r\n          <Tab className={selection==='stats'? \"active\" : \"\"} onClick={()=>setSelection('stats')}>Stats</Tab>\r\n          <Tab className={selection==='reports'? \"active\" : \"\"} onClick={()=>setSelection('reports')}>Report</Tab>\r\n        </DataNav>\r\n        <DataDisplay>\r\n          <CityName>{cityData? cityData.city_name : \"click a city\"}</CityName>\r\n          {selection==='reports'? <Report cityData={cityData}></Report> : <Graph cityData={cityData} selection={selection}></Graph> }    \r\n          <ChangeSelection to={'../job'}>change preferences</ChangeSelection>\r\n        </DataDisplay>\r\n      </Data>\r\n    </MapWrapper>\r\n  )\r\n}","import React, {useState} from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './global.scss'\nimport Header from './components/Header'\nimport Welcome from './components/Welcome';\nimport Job from './components/Job'\nimport Priority from './components/Priority'\nimport Stats from './components/Stats'\nimport MainApp from './components/Map'\nimport { Helmet } from 'react-helmet';\nimport formData from './data/form-data';\n\nfunction App() {\n  const [userChoices, setUserChoices] = useState({\n    job: localStorage.getItem('job') || formData.jobs[0].id,\n    priority: localStorage.getItem('priority') || formData.reports[0].id,\n    stats: localStorage.getItem('stats')?.split(\",\") || []\n  }) \n  //if cached, use cached userchoices (preserves when user refreshes)  \n  return (\n    <div className = \"app\">  \n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Urban Area Info Finder</title>\n        <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n      </Helmet>\n      <Header/>\n      <main>\n        <Routes>\n          <Route path='/' element={<Welcome/>}/>\n          <Route path='/welcome' element={<Welcome/>}/>\n          <Route path='/job' element={<Job userChoices={userChoices} setUserChoices={setUserChoices} data={formData.jobs}/>} />\n          <Route path='/priority' element={<Priority userChoices={userChoices} setUserChoices={setUserChoices} data={formData.reports}/>}/>\n          <Route path='/stats' element={<Stats userChoices={userChoices} setUserChoices={setUserChoices} data={formData.scores}/>}/>\n          <Route path='/map' element={<MainApp userChoices={userChoices} setUserChoices={setUserChoices}/>}/>\n        </Routes>\n      </main>\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\"\nReactDOM.render(\n  <BrowserRouter basename='explore-a-city'>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}